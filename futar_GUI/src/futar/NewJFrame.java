/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package futar;

import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Map;
import java.util.Scanner;
import java.util.TreeMap;
import java.util.TreeSet;
import javax.swing.DefaultListModel;

/**
 *
 * @author thomas
 */
public class NewJFrame extends javax.swing.JFrame {

     /**
      * Creates new form NewJFrame
      */
     private List<Ut> utak = new ArrayList<>();
     private final static String[] napNevek = {"hétfõ", "kedd", "szerda", "csütörtök", "péntek", "szombat", "vasárnap"};  //tomb
     List<String> napLista = new ArrayList<>();   
     DefaultListModel utakListaja = new DefaultListModel();
     DefaultListModel eredmenyLista = new DefaultListModel();

     private Map<Integer, List<Ut>> távolságok = new TreeMap<>();

     // private Map<Integer, TreeMap<Integer, TreeSet<Integer>>> badTavolsagok
     public NewJFrame() {
          initComponents();
          myInit();
     }

     /**
      * This method is called from within the constructor to initialize the
      * form. WARNING: Do NOT modify this code. The content of this method is
      * always regenerated by the Form Editor.
      */
     @SuppressWarnings("unchecked")
     // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
     private void initComponents() {

          jLabel1 = new javax.swing.JLabel();
          jButton1 = new javax.swing.JButton();
          jPanel1 = new javax.swing.JPanel();
          jLabel2 = new javax.swing.JLabel();
          jLabel3 = new javax.swing.JLabel();
          jLabel4 = new javax.swing.JLabel();
          jComboBox1 = new javax.swing.JComboBox<>();
          jLabel5 = new javax.swing.JLabel();
          jPanel2 = new javax.swing.JPanel();
          jLabel6 = new javax.swing.JLabel();
          jScrollPane1 = new javax.swing.JScrollPane();
          jList1 = new javax.swing.JList<>();
          jLabel7 = new javax.swing.JLabel();
          jButton2 = new javax.swing.JButton();
          jScrollPane2 = new javax.swing.JScrollPane();
          jList2 = new javax.swing.JList<>();

          setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
          setTitle("Futár heti statisztika");

          jLabel1.setText("Futár heti statisztika");

          jButton1.setText("Kilépés");
          jButton1.addActionListener(new java.awt.event.ActionListener() {
               public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButton1ActionPerformed(evt);
               }
          });

          jPanel1.setBackground(new java.awt.Color(204, 255, 255));
          jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

          jLabel2.setText("jLabel2");

          jLabel3.setText("jLabel3");

          jLabel4.setText("jLabel4");

          javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
          jPanel1.setLayout(jPanel1Layout);
          jPanel1Layout.setHorizontalGroup(
               jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(31, 31, 31)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                         .addComponent(jLabel4)
                         .addComponent(jLabel3)
                         .addComponent(jLabel2))
                    .addContainerGap(227, Short.MAX_VALUE))
          );
          jPanel1Layout.setVerticalGroup(
               jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jLabel2)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jLabel3)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jLabel4)
                    .addContainerGap(60, Short.MAX_VALUE))
          );

          jComboBox1.addItemListener(new java.awt.event.ItemListener() {
               public void itemStateChanged(java.awt.event.ItemEvent evt) {
                    jComboBox1ItemStateChanged(evt);
               }
          });
          jComboBox1.addActionListener(new java.awt.event.ActionListener() {
               public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jComboBox1ActionPerformed(evt);
               }
          });
          jComboBox1.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
               public void propertyChange(java.beans.PropertyChangeEvent evt) {
                    jComboBox1PropertyChange(evt);
               }
          });

          jLabel5.setText("Ide kerül az eredmény");

          jPanel2.setBackground(new java.awt.Color(255, 153, 102));

          jLabel6.setText("Úthossz szerinti statisztika (hány olyan volt, és melyek azok)");

          jScrollPane1.setViewportView(jList1);

          jLabel7.setText("Úthosszak");

          jButton2.setText("Az úthosszhoz tartozó utak");
          jButton2.addActionListener(new java.awt.event.ActionListener() {
               public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButton2ActionPerformed(evt);
               }
          });

          jScrollPane2.setViewportView(jList2);

          javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
          jPanel2.setLayout(jPanel2Layout);
          jPanel2Layout.setHorizontalGroup(
               jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                         .addGroup(jPanel2Layout.createSequentialGroup()
                              .addGap(34, 34, 34)
                              .addComponent(jLabel7)
                              .addGap(250, 250, 250)
                              .addComponent(jLabel6))
                         .addGroup(jPanel2Layout.createSequentialGroup()
                              .addGap(48, 48, 48)
                              .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                              .addGap(41, 41, 41)
                              .addComponent(jButton2)
                              .addGap(46, 46, 46)
                              .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addContainerGap(529, Short.MAX_VALUE))
          );
          jPanel2Layout.setVerticalGroup(
               jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                         .addGroup(jPanel2Layout.createSequentialGroup()
                              .addGap(19, 19, 19)
                              .addComponent(jLabel6))
                         .addGroup(jPanel2Layout.createSequentialGroup()
                              .addContainerGap()
                              .addComponent(jLabel7)))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                         .addGroup(jPanel2Layout.createSequentialGroup()
                              .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                              .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                   .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                   .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                         .addGroup(jPanel2Layout.createSequentialGroup()
                              .addGap(57, 57, 57)
                              .addComponent(jButton2)))
                    .addContainerGap(56, Short.MAX_VALUE))
          );

          javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
          getContentPane().setLayout(layout);
          layout.setHorizontalGroup(
               layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton1)
                    .addContainerGap())
               .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addGap(308, 308, 308)
                    .addComponent(jLabel5)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(23, 23, 23))
               .addGroup(layout.createSequentialGroup()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                         .addGroup(layout.createSequentialGroup()
                              .addGap(457, 457, 457)
                              .addComponent(jLabel1))
                         .addGroup(layout.createSequentialGroup()
                              .addGap(43, 43, 43)
                              .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
          );
          layout.setVerticalGroup(
               layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jLabel1)
                    .addGap(31, 31, 31)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                         .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                         .addGroup(layout.createSequentialGroup()
                              .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                              .addGap(8, 8, 8)
                              .addComponent(jLabel5)))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 50, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                         .addComponent(jButton1)
                         .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addContainerGap())
          );

          pack();
     }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
         System.exit(0);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jComboBox1PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jComboBox1PropertyChange

    }//GEN-LAST:event_jComboBox1PropertyChange

    private void jComboBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox1ItemStateChanged

    }//GEN-LAST:event_jComboBox1ItemStateChanged

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
         jLabel5.setVisible(true);
         String nap = jComboBox1.getSelectedItem().toString();
         int index = napLista.indexOf(nap) + 1; //indexbõl sorszám kell
         int utakDarab = 0;
         for (Ut ut : utak) {
              if (ut.getNap() == index) {
                   utakDarab++;
              }
         }
         jLabel5.setText(nap + " az utak száma " + utakDarab + " darab volt.");
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
         // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

     /**
      * @param args the command line arguments
      */
     public static void main(String args[]) {
          /* Set the Nimbus look and feel */
          //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
          /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
           */
          try {
               for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                    if ("Nimbus".equals(info.getName())) {
                         javax.swing.UIManager.setLookAndFeel(info.getClassName());
                         break;
                    }
               }
          } catch (ClassNotFoundException ex) {
               java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
          } catch (InstantiationException ex) {
               java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
          } catch (IllegalAccessException ex) {
               java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
          } catch (javax.swing.UnsupportedLookAndFeelException ex) {
               java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
          }
          //</editor-fold>

          /* Create and display the form */
          java.awt.EventQueue.invokeLater(new Runnable() {
               public void run() {
                    new NewJFrame().setVisible(true);
               }
          });
     }

     // Variables declaration - do not modify//GEN-BEGIN:variables
     private javax.swing.JButton jButton1;
     private javax.swing.JButton jButton2;
     private javax.swing.JComboBox<String> jComboBox1;
     private javax.swing.JLabel jLabel1;
     private javax.swing.JLabel jLabel2;
     private javax.swing.JLabel jLabel3;
     private javax.swing.JLabel jLabel4;
     private javax.swing.JLabel jLabel5;
     private javax.swing.JLabel jLabel6;
     private javax.swing.JLabel jLabel7;
     private javax.swing.JList<String> jList1;
     private javax.swing.JList<String> jList2;
     private javax.swing.JPanel jPanel1;
     private javax.swing.JPanel jPanel2;
     private javax.swing.JScrollPane jScrollPane1;
     private javax.swing.JScrollPane jScrollPane2;
     // End of variables declaration//GEN-END:variables

     private void myInit() {
          int[] díjak = feltölt(utak, "utak.txt"); //Ez tuti 3 elemû
          TreeSet<Integer> egyediNapok = new TreeSet<>();   // egyszer szerepelhet egy adat          
         

          for (Ut egyUt : utak) {
               egyediNapok.add(egyUt.getNap());    // a napot hozzáadja a halmazhoz 

          }

          for (Integer nap : egyediNapok) {
             //  System.out.println(nap);
               jComboBox1.addItem(napNevek[nap - 1]);  // kedd,  szombat nincs mivel nics 2-es és 6-os napszam
              
          }
          
          jComboBox1.setSelectedIndex(0);

          napLista.addAll(Arrays.asList(napNevek)); // napNevek tömböt listává alakitva hozzáadja a napLisához
          // azért kell a tömbõl lista, mert a tömbnek nincs equal(), compare to(), indexOf() metódusa
          
          //System.out.println(napLista);
          
          

          jLabel2.setText("1-5km a díj " + díjak[0] + "Ft/km");
          jLabel3.setText("6-12km a díj " + díjak[1] + "Ft/km");
          jLabel4.setText("13 km felett a díj " + díjak[2] + "Ft/km");

          jLabel5.setVisible(false);

          utHosszListaFeltoltes();

           
         
          
          
     }

     private int[] feltölt(List<Ut> utak, String utaktxt) {
          int[] result = null;
          try {
               Scanner bemenet = new Scanner(new File(utaktxt));
               //int [] result = new int [3];
               int[] temp = {
                    bemenet.nextInt(),
                    bemenet.nextInt(),
                    bemenet.nextInt()
               };
               
//               for (int i = 0; i < temp.length; i++) {
//                    System.out.println(temp[i]) ;
//                    
//               }

               result = temp;
               
               
               while (bemenet.hasNextInt()) {
                    utak.add(new Ut(bemenet.nextInt(),
                            bemenet.nextInt(),
                            bemenet.nextInt())); // objektumokat hoz létre melyet hozzáad az utak listához, ameddig a fájlnak van adata 
               }
          } catch (IOException exc) {
               System.out.println("Hiba: " + exc.getMessage());
          }
          return result;
     }

     private void utHosszListaFeltoltes() {
          for (Ut ut : utak) {
               
               if (!távolságok.containsKey(ut.getHossz())) {
                    távolságok.put(ut.getHossz(), new ArrayList<>()); 
                    
                    //hogyha a map nem tartalmazza a kulcsot, amely az ut hossza, akkor
                    // adja  hozzá kulcsként a út hosszát és hozzon létre egy ArrayListet
                            
               }
    
              
              távolságok.get(ut.getHossz()).add(ut);
              // ha már van ilyen kulcs akkor adja hozzá az utat neki létrehozott listához
              
          }

          jList1.setModel(utakListaja);

          for (int táv : távolságok.keySet()) {
              
              // System.out.println(táv);
              // System.out.println(távolságok.get(táv).size());
               
               utakListaja.addElement(táv + " (" + távolságok.get(táv).size() + " út volt)");
          }
     }
}
